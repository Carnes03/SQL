## For this task, I fetched Spotify data from Kaggle. Subsequently, I built a table to incorporate the Spotify data. Lastly, I conducted analysis on the data using SQL.

# CREATE TABLE BIT_DB.SpotifyData (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)

#01 What is the average danceability by artist and track? 

SELECT AVG (danceability), artist_name, track_name
FROM BIT_DB.SpotifyData;

#02 Who are the top 10 artists based on popularity?

SELECT DISTINCT artist_name, popularity
FROM BIT_DB.SpotifyData
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;

#03 What artist released the longest song? 

SELECT artist_name, MAX(duration_ms)
FROM BIT_DB.SpotifyData;

#04 Which artists has more than one song listed in the top 50? 

SELECT COUNT (track_name), artist_name
FROM BIT_DB.SpotifyData
GROUP BY artist_name
HAVING COUNT (track_name) >= 2;

#05 Which song had the lowest acousticness value and a high degree of instrumental elements?

SELECT track_name, MIN (acousticness), MAX (instrumentalness)
FROM BIT_DB.SpotifyData;
